name: .NET > Build > Test > OpenApi > Docker



on:
  workflow_call:
    inputs:
      # working-directory is added to specify "terraform" directory in project source code as that's where the terraform files live.
      working-directory:
        required: false
        type: string
        default: './src'

jobs:
  build-test-openapi:
    # if: github.ref != 'refs/heads/main'
    name: CI
    runs-on: ubuntu-latest   
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET 7.0
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Restore .NET dependencies
        id: dotnetrestore
        working-directory: ${{ inputs.working-directory }}
        run: dotnet restore

      - if: steps.dotnetrestore.outputs.exit_code == 0
        name: Build .NET 
        id: dotnetbuild 
        working-directory: ${{ inputs.working-directory }}
        run: dotnet build --no-restore

      - if: steps.dotnetbuild.outputs.exit_code == 0
        id: dotnettest
        name: Run .NET Unit Tests
        working-directory: ${{ inputs.working-directory }}
        run: dotnet test --no-build --verbosity normal

      - if: steps.dotnettest.outputs.exit_code == 0
        id: dotnetswagger
        name: Run Swagger cli to generate openapi.json
        working-directory: ${{ inputs.working-directory }}/${{secrets.AppName}}/
        run: |
                ls
                dotnet tool restore
                dotnet tool run swagger tofile --output openapi.json bin/Debug/net7.0/${{secrets.AppName}}.dll v1

      - name: Upload openapi.json
        uses: actions/upload-artifact@v3
        with:
          name: spec-file
          path: ${{ inputs.working-directory }}/${{secrets.AppName}}/openapi.json

  update-openapi-spec:
    needs: build-test-openapi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        # with:
        #   persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        #   fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
      - name: Download openapi.json
        uses: actions/download-artifact@v3
        with:
          name: spec-file
          
      - name: Display structure of downloaded files
        run: ls -R

      - name: Commit and Push Changes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: autopr
          author_email: autopr@kubeosx.com
          message: 'Update Open Api Spec'
          add: 'openapi.json'
          
  build-push-container:
    # if: github.ref == 'refs/heads/main'
    needs: update-openapi-spec
    name: Docker Build and Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Docker Login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      
      - name: docker build
        run: |
          docker build ${{ inputs.working-directory }}/${{secrets.AppName}}/ -t  ${{secrets.DOCKER_USER}}/${{secrets.AppName}}:${{ github.run_number  }}
      
      - name : docker push
        run: |
          docker push ${{secrets.DOCKER_USER}}/${{secrets.AppName}}:${{ github.run_number  }}